package handlers

import (
	"context"
	"fmt"
	"github.com/MikhailMishutkin/FoodOrdering/microservices/gen"
	"google.golang.org/protobuf/types/known/timestamppb"
	"log"

	pb "github.com/MikhailMishutkin/FoodOrdering/proto/pkg/restaurant"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
)

//generated by package gen
func (s *RestaurantService) CreateProduct(ctx context.Context, in *pb.CreateProductRequest) (*pb.CreateProductResponse, error) {
	log.Print("CreateProduct was invoked")
	if in.Name == "" {
		gen.TypeSelector()
		gen.TypeSelector()
	}
	p := &pb.Product{
		Uuid:        gen.RandomID(),
		Name:        in.Name,
		Description: in.Description,
		Type:        in.Type,
		Weight:      in.Weight,
		Price:       in.Price,
		CreatedAt:   timestamppb.Now(),
	}
	err := s.rSer.CreateProduct(p)
	if err != nil {
		code := codes.Internal
		return nil, status.Errorf(code, "repo.CreateProduct went down witn error, cannot save product in db: %v\n", err)
	}

	resp := &pb.CreateProductResponse{}

	return resp, nil
}

func (s *RestaurantService) GetProductList(ctx context.Context, in *pb.GetProductListRequest) (*pb.GetProductListResponse, error) {
	log.Print("GetProductList was invoked")
	res, err := s.rSer.GetProductList()
	if err != nil {
		code := codes.Internal
		return nil, status.Errorf(code, "repo.GetProductList went down witn error, cannot get products from db: %v\n", err)
	}
	//TODO: delete
	fmt.Println(res.Result)
	return res, nil
}
