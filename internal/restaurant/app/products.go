package app

import (
	"context"
	"fmt"
	"log"

	pb "gitlab.com/mediasoft-internship/final-task/contracts/pkg/contracts/restaurant"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
)

//generated by package gen
func (s *Server) CreateProduct(ctx context.Context, in *pb.CreateProductRequest) (*pb.CreateProductResponse, error) {
	log.Print("CreateProduct was invoked")

	p := new(pb.Product)
	err := s.repo.CreateProduct(p)

	if err != nil {
		code := codes.Internal
		return nil, status.Errorf(code, "repo.CreateProduct went down witn error, cannot save product in db: ", err)
	}

	resp := &pb.CreateProductResponse{}

	return resp, nil
}

func (s *Server) GetProductList(ctx context.Context, in *pb.GetProductListRequest) (*pb.GetProductListResponse, error) {
	log.Print("GetProductList was invoked")
	res, err := s.repo.GetProductList()
	if err != nil {
		code := codes.Internal
		return nil, status.Errorf(code, "repo.GetProductList went down witn error, cannot get products from db: ", err)
	}
	//TODO: delete
	fmt.Println(res.Result)
	return res, nil
}
